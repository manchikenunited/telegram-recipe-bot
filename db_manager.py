import datetime
from sqlalchemy import create_engine, Column, Integer, String, Date, DateTime
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base

# --- 1. –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ë–ê–ó–´ ---
# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
Base = declarative_base()

# –ò–º—è —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite. –≠—Ç–æ—Ç —Ñ–∞–π–ª –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
DATABASE_FILE = "recipes.db"
# –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ SQLAlchemy –¥–ª—è SQLite
engine = create_engine(f"sqlite:///{DATABASE_FILE}")
# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å —Å–µ—Å—Å–∏–π, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –º—ã –±—É–¥–µ–º –æ–±—â–∞—Ç—å—Å—è —Å –ë–î
Session = sessionmaker(bind=engine)

# --- 2. –ú–û–î–ï–õ–¨ –î–ê–ù–ù–´–• (–¢–ê–ë–õ–ò–¶–ê 'recipes_history') ---
class Recipe(Base):
    """–ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–ª—é–¥."""
    __tablename__ = 'recipes_history'

    id = Column(Integer, primary_key=True)
    # –î–∞—Ç–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –±–ª—é–¥–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
    meal_date = Column(Date, nullable=False)
    # –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ–≤—Ç–æ—Ä—ã, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
    meal_name = Column(String, nullable=False)
    # –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ—Ü–µ–ø—Ç–∞ (–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, —à–∞–≥–∏, –ö–ñ–ë–£)
    recipe_full = Column(String)
    # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –∑–∞–ø–∏—Å—å –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É
    generated_at = Column(DateTime, default=datetime.datetime.utcnow)

    def __repr__(self):
        return f"<Recipe(meal_name='{self.meal_name}', meal_date='{self.meal_date}')>"

# --- 3. –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ë–î ---

def init_db():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç."""
    try:
        # –°–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Base (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ - Recipe)
        Base.metadata.create_all(engine)
        print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DATABASE_FILE} –∏ —Ç–∞–±–ª–∏—Ü–∞ 'recipes_history' –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")
    except Exception as e:
        print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")

def save_recipes(recipes_data: list):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    –û–∂–∏–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å–ª–æ–≤–∞—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç: 
    'meal_date' (–æ–±—ä–µ–∫—Ç datetime.date), 'meal_name' (str), 'recipe_full' (str).
    """
    session = Session()
    try:
        new_recipes = []
        for data in recipes_data:
            recipe = Recipe(
                meal_date=data['meal_date'],
                meal_name=data['meal_name'],
                recipe_full=data['recipe_full']
            )
            new_recipes.append(recipe)
        
        session.add_all(new_recipes)
        session.commit()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(new_recipes)} –Ω–æ–≤—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤.")
        return True
    except Exception as e:
        session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {e}")
        return False
    finally:
        session.close()

def get_exclusion_list(days: int = 21) -> list[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –±–ª—é–¥, –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
    –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 'days' –¥–Ω–µ–π, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –ò–ò.
    """
    session = Session()
    try:
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ 21 –¥–µ–Ω—å –Ω–∞–∑–∞–¥ (–∏–ª–∏ days –¥–Ω–µ–π –Ω–∞–∑–∞–¥)
        start_date = datetime.date.today() - datetime.timedelta(days=days)
        
        # –í—ã–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥, –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å —ç—Ç–æ–π –¥–∞—Ç—ã
        exclusion_list = session.query(Recipe.meal_name).filter(
            Recipe.meal_date >= start_date
        ).distinct().all()
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ—Ä—Ç–µ–∂–µ–π –≤ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
        result = [item[0] for item in exclusion_list]
        
        print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(result)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–ª—é–¥ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π.")
        return result
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π: {e}")
        return []
    finally:
        session.close()

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫: –µ—Å–ª–∏ –≤—ã –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é, –æ–Ω —Å–æ–∑–¥–∞—Å—Ç –±–∞–∑—É –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏.
if __name__ == '__main__':
    from datetime import date
    
    print("--- –¢–µ—Å—Ç –ë–î ---")
    init_db()
    
    # 1. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: —Å–æ—Ö—Ä–∞–Ω–∏–º –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–µ –∏ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞—à–Ω–µ–µ –±–ª—é–¥–∞
    test_data = [
        {'meal_date': date.today() + datetime.timedelta(days=1), 'meal_name': '–û–º–ª–µ—Ç —Å–æ —à–ø–∏–Ω–∞—Ç–æ–º', 'recipe_full': '...'},
        {'meal_date': date.today() + datetime.timedelta(days=2), 'meal_name': '–ö—É—Ä–∏—Ü–∞ –≤ —Å–æ—É—Å–µ —Ç–µ—Ä–∏—è–∫–∏', 'recipe_full': '...'},
    ]
    save_recipes(test_data)
    
    # 2. –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    exclusions = get_exclusion_list(days=3)
    print("\n–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:", exclusions)
