import os
import json
from openai import OpenAI
from datetime import date, timedelta
from typing import List, Dict, Any

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø OpenAI ---
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
client = None
if OPENAI_API_KEY:
    try:
        client = OpenAI(api_key=OPENAI_API_KEY)
        print("‚úÖ OpenAI –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ OpenAI: {e}")
else:
    print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")


# --- –í–ê–®–ò –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï ---
USER_KZHBU = {
    "me": "2204 –∫–∫–∞–ª, 165–≥ –±–µ–ª–∫–∞, 61–≥ –∂–∏—Ä–æ–≤, 248–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤.",
    "wife": "1703 –∫–∫–∞–ª, 128–≥ –±–µ–ª–∫–∞, 47–≥ –∂–∏—Ä–æ–≤, 192–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤.",
    
    # –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–ª–æ—Ä–∏–π –Ω–∞ –¥–≤–æ–∏—Ö
    "total_target_kzhbu": "3907 –ö–∫–∞–ª, 293–≥ –ë–µ–ª–∫–∞, 108–≥ –ñ–∏—Ä–æ–≤, 440–≥ –£–≥–ª–µ–≤–æ–¥–æ–≤",
    "target_distribution_kzhbu": {
        "–ó–∞–≤—Ç—Ä–∞–∫": "900-1100 –∫–∫–∞–ª",
        "–û–±–µ–¥": "1200-1400 –∫–∫–∞–ª",
        "–ü–µ—Ä–µ–∫—É—Å": "400-500 –∫–∫–∞–ª",
        "–£–∂–∏–Ω": "1200-1400 –∫–∫–∞–ª"
    }
}

# --- –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –í–´–í–û–î–ê (JSON Schema) ---
JSON_SCHEMA = {
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "day": {"type": "string", "description": "–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)"},
            "date": {"type": "string", "description": "–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD"},
            "meals": {
                "type": "array",
                "description": "–°–ø–∏—Å–æ–∫ –∏–∑ 4 –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏: –ó–∞–≤—Ç—Ä–∞–∫, –û–±–µ–¥, –ü–µ—Ä–µ–∫—É—Å, –£–∂–∏–Ω.",
                "items": {
                    "type": "object",
                    "properties": {
                        "type": {"type": "string", "description": "–¢–∏–ø –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ (—Å—Ç—Ä–æ–≥–æ: –ó–∞–≤—Ç—Ä–∞–∫, –û–±–µ–¥, –ü–µ—Ä–µ–∫—É—Å, –£–∂–∏–Ω)"},
                        "meal_name": {"type": "string", "description": "–ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞"},
                        "total_kzhbu_for_two": {"type": "string", "description": "–°—É–º–º–∞—Ä–Ω–æ–µ –ö–ñ–ë–£ –±–ª—é–¥–∞ –¥–ª—è –¥–≤—É—Ö –ø–æ—Ä—Ü–∏–π. –§–æ—Ä–º–∞—Ç: '–ö–∫–∞–ª: X, –ë: Y–≥, –ñ: Z–≥, –£: W–≥'."},
                        "weight_m": {"type": "integer", "description": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –≤–µ—Å –ø–æ—Ä—Ü–∏–∏ –¥–ª—è –º—É–∂—á–∏–Ω—ã –≤ –≥—Ä–∞–º–º–∞—Ö (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)."},
                        "weight_w": {"type": "integer", "description": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –≤–µ—Å –ø–æ—Ä—Ü–∏–∏ –¥–ª—è –∂–µ–Ω—â–∏–Ω—ã –≤ –≥—Ä–∞–º–º–∞—Ö (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)."},
                        "recipe_full": {"type": "string", "description": "–ü–æ–ª–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç: –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞), —à–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è."}
                    },
                    "required": ["type", "meal_name", "total_kzhbu_for_two", "weight_m", "weight_w", "recipe_full"]
                }
            }
        },
        "required": ["day", "date", "meals"]
    }
}

# --- –§–£–ù–ö–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–ú–ü–¢–ê ---

def create_master_prompt(exclusion_list: List[str]) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è OpenAI."""
    
    today = date.today()
    start_date = today + timedelta(days=(7 - today.weekday()))
    
    dates_list = []
    for i in range(5):
        current_date = start_date + timedelta(days=i)
        dates_list.append(current_date.strftime("%Y-%m-%d"))

    exclusions_text = ""
    if exclusion_list:
        print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(exclusion_list)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–ª—é–¥ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 21 –¥–Ω–µ–π.")
        exclusions_text = f"\n–ö–†–ê–ô–ù–ï –í–ê–ñ–ù–û: –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –±–ª—é–¥–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –Ω–µ–¥–µ–ª–∏): {', '.join(exclusion_list)}"
    
    schema_string = json.dumps(JSON_SCHEMA, indent=2, ensure_ascii=False)
    
    prompt = f"""
    –¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–µ—Ñ-–ø–æ–≤–∞—Ä –∏ –¥–∏–µ—Ç–æ–ª–æ–≥. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—é –Ω–∞ 5 –±—É–¥–Ω–∏—Ö –¥–Ω–µ–π, –¥–µ–ª—è –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É –Ω–∞ 4 –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏: –ó–∞–≤—Ç—Ä–∞–∫, –û–±–µ–¥, –ü–µ—Ä–µ–∫—É—Å, –£–∂–∏–Ω.
    
    –î–Ω–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (—Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD): {dates_list}
    
    –¶–µ–ª–µ–≤—ã–µ —Å—É—Ç–æ—á–Ω—ã–µ –Ω–æ—Ä–º—ã –ö–ñ–ë–£:
    - –ú—É–∂—á–∏–Ω–∞: {USER_KZHBU['me']}
    - –ñ–µ–Ω—â–∏–Ω–∞: {USER_KZHBU['wife']}
    
    –ß–†–ï–ó–í–´–ß–ê–ô–ù–û –í–ê–ñ–ù–´–ï –£–ö–ê–ó–ê–ù–ò–Ø –ü–û –ö–ñ–ë–£:
    1. –û–ë–©–ê–Ø –¶–ï–õ–¨ –°–£–ú–ú–ê–†–ù–û–ô –ö–ê–õ–û–†–ò–ô–ù–û–°–¢–ò –ù–ê –î–í–û–ò–•: **{USER_KZHBU['total_target_kzhbu']}**.
    2. –ö–ê–õ–û–†–ò–ô–ù–û–°–¢–¨ –ö–ê–ñ–î–û–ì–û –ë–õ–Æ–î–ê (–°–£–ú–ú–ê–†–ù–û –ù–ê –î–í–û–ò–•) –î–û–õ–ñ–ù–ê –ë–´–¢–¨ –í –°–õ–ï–î–£–Æ–©–ò–• –ü–†–ò–ú–ï–†–ù–´–• –î–ò–ê–ü–ê–ó–û–ù–ê–•:
       - –ó–∞–≤—Ç—Ä–∞–∫: **{USER_KZHBU['target_distribution_kzhbu']['–ó–∞–≤—Ç—Ä–∞–∫']}**
       - –û–±–µ–¥: **{USER_KZHBU['target_distribution_kzhbu']['–û–±–µ–¥']}**
       - –ü–µ—Ä–µ–∫—É—Å: **{USER_KZHBU['target_distribution_kzhbu']['–ü–µ—Ä–µ–∫—É—Å']}**
       - –£–∂–∏–Ω: **{USER_KZHBU['target_distribution_kzhbu']['–£–∂–∏–Ω']}**
       
    –ö–†–ê–ô–ù–ï –í–ê–ñ–ù–û:
    1. –°–Ω–∞—á–∞–ª–∞ —Å–æ—Å—Ç–∞–≤—å **—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ø–æ–ª–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç**, –∑–∞—Ç–µ–º **–†–ê–°–°–ß–ò–¢–ê–ô** –ö–ñ–ë–£ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Ü–∏—Ñ—Ä—ã.
    2. **–í–µ—Å –ø–æ—Ä—Ü–∏–π (weight_m, weight_w) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º** –¥–ª—è –≥–æ—Ç–æ–≤–æ–≥–æ –±–ª—é–¥–∞. **200 –≥—Ä–∞–º–º –∫–∞—à–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å 900 –ö–∫–∞–ª!** –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º –æ–±—ä–µ–º–æ–º –ø–æ—Ä—Ü–∏–∏ –∏ —Å–æ—Å—Ç–∞–≤–æ–º —Ä–µ—Ü–µ–ø—Ç–∞.
    3. –°—É–º–º–∞—Ä–Ω–∞—è –¥–Ω–µ–≤–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å **–í–°–ï–• 4-—Ö –±–ª—é–¥** –¥–æ–ª–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ–±—â–µ–π —Ü–µ–ª–µ–≤–æ–π —Å—É–º–º–µ **3907 –ö–∫–∞–ª**. –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 –∫–∫–∞–ª.
    4. –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏ –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É –ö–ñ–ë–£ (–¥–ª—è –º—É–∂—á–∏–Ω—ã –∏ –∂–µ–Ω—â–∏–Ω—ã) –º–µ–∂–¥—É 4 –ø—Ä–∏–µ–º–∞–º–∏ –ø–∏—â–∏, —Å—Ç–∞—Ä–∞—è—Å—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ –∏—Ö –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º —Ü–µ–ª—è–º.
    5. –ü–û–õ–ï 'total_kzhbu_for_two' –î–û–õ–ñ–ù–û –°–û–î–ï–†–ñ–ê–¢–¨ –°–¢–†–û–ö–£ –° –†–ê–°–ß–ï–¢–û–ú (–ö–∫–∞–ª, –ë, –ñ, –£) –ò –ù–ï –î–û–õ–ñ–ù–û –ë–´–¢–¨ –ü–£–°–¢–´–ú. –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: '–ö–∫–∞–ª: X, –ë: Y–≥, –ñ: Z–≥, –£: W–≥'.
    6. –†–∞—Å—Å—á–∏—Ç–∞–π **—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –≤–µ—Å –ø–æ—Ä—Ü–∏–∏ –≤ –≥—Ä–∞–º–º–∞—Ö (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)** –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –º—É–∂—á–∏–Ω—ã (weight_m) –∏ –¥–ª—è –∂–µ–Ω—â–∏–Ω—ã (weight_w).
    7. –†–µ—Ü–µ–ø—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ (–Ω–µ –±–æ–ª–µ–µ 60 –º–∏–Ω—É—Ç –≥–æ—Ç–æ–≤–∫–∏).
    {exclusions_text}
    
    –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –°–¢–†–û–ì–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –°–•–ï–ú–ï:
    {schema_string}
    """
    return prompt

# --- –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –í–´–ó–û–í–ê API ---

def generate_weekly_plan(exclusion_list: List[str]) -> List[Dict[str, Any]] | None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ OpenAI –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤.
    """
    if client is None:
        print("‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞: –ö–ª–∏–µ–Ω—Ç OpenAI –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
        return None
        
    prompt = create_master_prompt(exclusion_list)
    print("--- 1. –ó–∞–ø—Ä–æ—Å –≤ OpenAI: –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É. ---")
    
    try:
        response = client.chat.completions.create(
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º gpt-4o-mini –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è, –ø–µ—Ä–µ–π–¥–µ–º –Ω–∞ gpt-4o.
            model="gpt-4o-mini", 
            response_format={"type": "json_object"}, 
            messages=[
                {"role": "system", "content": "–¢—ã - —Å–∏—Å—Ç–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JSON-–æ–±—ä–µ–∫—Ç—ã —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–µ—Ü–µ–ø—Ç–æ–≤. –¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ JSON, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –ò—Å–ø–æ–ª—å–∑—É–π –°–•–ï–ú–£, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –≤ –∑–∞–ø—Ä–æ—Å–µ."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7 
        )

        print("--- 2. –ó–∞–ø—Ä–æ—Å –≤ OpenAI: –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω! ---")
        
        json_content = response.choices[0].message.content.strip()
        plan_data = json.loads(json_content)
        
        print("‚úÖ –ü–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Ä–∞–∑–æ–±—Ä–∞–Ω.")
        return plan_data

    except json.JSONDecodeError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–ê–†–°–ò–ù–ì–ê JSON: –ò–ò –Ω–µ —Å–º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å —á–∏—Å—Ç—ã–π JSON. –û—à–∏–±–∫–∞: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í–´–ó–û–í–ê OpenAI (–°–µ—Ç–µ–≤–∞—è/API): {e}")
        return None

# --- –¢–ï–°–¢–û–í–´–ô –ó–ê–ü–£–°–ö ---
if __name__ == '__main__':
    print("--- –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ ai_generator.py ---")
    test_exclusions = ["–û–º–ª–µ—Ç", "–ü–ª–æ–≤"]
    plan = generate_weekly_plan(test_exclusions)
    
    if plan:
        print(f"\n–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(plan)} –¥–Ω–µ–π. –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å: {plan[0]['day']}.")
    else:
        print("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å.")
